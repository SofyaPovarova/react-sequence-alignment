{"version":3,"sources":["components/InputBlock/index.js","components/ResultBlock/index.js","Alignment-app.js","index.js"],"names":["InputBlock","props","seq1","seq2","className","data-testid","name","value","onChange","change","placeholder","disabled","status","type","onClick","changeStatus","ResultBlock","colSeq1","colSeq2","i","length","push","key","style","color","fontWeight","renderColoredSeq","m","n","l","dp","Array","fill","map","j","Math","min","alSeq1","alSeq2","pos1","pos2","start","slice","alignSequences","reset","AlignmentApp","e","target","setState","state","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c45fe6e.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\n\nconst InputBlock= (props) => {\n    const seq1 = props.seq1;\n    const seq2 = props.seq2;\n\n    return (\n        <div className=\"input-block\" data-testid=\"inputArea\">\n            <form className=\"input-form\">\n                <p className=\"input-title\">enter sequences to align</p>\n                <input name=\"seq1\"\n                       data-testid=\"input1\"\n                       className=\"input-seq\"\n                       value={seq1}\n                       onChange={props.change}\n                       placeholder=\"first sequence\"\n                       disabled={props.status === \"result\"}\n                />\n                <input name=\"seq2\"\n                       data-testid=\"input2\"\n                       className=\"input-seq\"\n                       value={seq2}\n                       onChange={props.change}\n                       placeholder=\"second sequence\"\n                       disabled={props.status === \"result\"}\n                />\n                <button\n                    data-testid=\"processBtn\"\n                    className=\"process-button\"\n                    type=\"button\"\n                    onClick={props.changeStatus}\n                ></button>\n            </form>\n        </div>\n    )\n};\n\nexport default InputBlock;","import React from 'react';\nimport './index.css';\n\nconst ResultBlock = props => {\n    const alignSequences = () => {\n        const seq1 = props.seq1;\n        const seq2 = props.seq2;\n\n        const mismatchPenalty = 2;\n        const gapPenalty = 3;\n\n        const m = seq1.length;\n        const n = seq2.length;\n        const l = n + m;\n\n        let dp = Array(l+ 1).fill(0).map(() => Array(l + 1).fill(0));\n        for (let i = 0; i <= l; i++) {\n            dp[i][0] = i * gapPenalty;\n            dp[0][i] = i * gapPenalty;\n        }\n\n        for (let i = 1; i <= m; i++) {\n            for (let j = 1; j <= n; j++) {\n                if (seq1[i - 1] === seq2[j - 1]) {\n                    dp[i][j] = dp[i - 1][j - 1];\n                } else {\n                    dp[i][j] = Math.min(Math.min(\n                        dp[i - 1][j - 1] + mismatchPenalty,\n                        dp[i - 1][j] + gapPenalty),\n                        dp[i][j - 1] + gapPenalty);\n                }\n            }\n        }\n\n        let alSeq1 = Array(l+1);\n        let alSeq2 = Array(l+1);\n\n        let i = m;\n        let j = n;\n\n        let pos1 = l;\n        let pos2 = l;\n\n        while ( i !== 0 && j !== 0) {\n            if (seq1[i - 1] === seq2[j - 1]) {\n                alSeq1[pos1--] = seq1[i-1];\n                alSeq2[pos2--] = seq2[j-1];\n                i--;\n                j--;\n            } else if (dp[i - 1][j - 1] + mismatchPenalty === dp[i][j]) {\n                alSeq1[pos1--] = seq1[i-1];\n                alSeq2[pos2--] = seq2[j-1];\n                i--;\n                j--;\n            } else if (dp[i - 1][j] + gapPenalty === dp[i][j]) {\n                alSeq1[pos1--] = seq1[i-1];\n                alSeq2[pos2--] = '-';\n                i--;\n            } else if (dp[i][j - 1] + gapPenalty === dp[i][j]) {\n                alSeq1[pos1--] = '-';\n                alSeq2[pos2--] = seq2[j-1];\n                j--;\n            }\n        }\n\n        while (pos1 > 0) {\n            if (i > 0) alSeq1[pos1--] = seq1[--i];\n            else alSeq1[pos1--] = '-';\n        }\n        while (pos2 > 0) {\n            if (j > 0) alSeq2[pos2--] = seq2[--j];\n            else alSeq2[pos2--] = '-';\n        }\n\n        let start = 1;\n        for (i = l; i >= 1; i--) {\n            if (alSeq2[i] === '-' && alSeq1[i] === '-') {\n                start = i + 1;\n                break;\n            }\n        }\n\n        return [alSeq1.slice(start), alSeq2.slice(start)];\n    };\n\n    const renderColoredSeq = ([seq1, seq2]) => {\n        let colSeq1 = [];\n        let colSeq2 = [];\n        for (let i = 0; i < seq1.length; i++) {\n            if (seq1[i] === seq2[i]) {\n                colSeq1.push(\n                    <span key={`sym${i}`} style={{color: 'green', fontWeight: 'bold'}}>\n                        {seq1[i]}\n                    </span>\n                );\n                colSeq2.push(\n                    <span key={`sym${i}`} style={{color: 'green', fontWeight: 'bold'}}>\n                        {seq1[i]}\n                    </span>\n                )\n            } else {\n                colSeq1.push(\n                    <span key={`sym${i}`} style={{color: 'gray'}}>\n                        {seq1[i]}\n                    </span>\n                );\n                colSeq2.push(\n                    <span key={`sym${i}`} style={{color: 'gray'}}>\n                        {seq2[i]}\n                    </span>\n                )\n            }\n\n        }\n\n        return (\n            <div className=\"alignment\">\n                <div data-testid=\"resultSeq1\" className=\"result-seq\">\n                    {colSeq1}\n                </div>\n                <div data-testid=\"resultSeq2\" className=\"result-seq\">\n                    {colSeq2}\n                </div>\n\n            </div>\n        )\n    };\n\n    const renderResult = () => {\n        if (props.status !== \"result\") {\n            return \"\";\n        }\n\n        return (\n            <div className=\"result-block\">\n                {renderColoredSeq(alignSequences())}\n                <button className=\"reset\" name=\"reset\" value=\"reset\" onClick={props.reset}></button>\n            </div>\n        )\n    };\n\n    return renderResult();\n};\n\nexport default ResultBlock;","import React, {Component} from 'react';\nimport './Alignment-app.css';\nimport InputBlock from \"./components/InputBlock\";\nimport ResultBlock from \"./components/ResultBlock\";\n\nclass AlignmentApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: \"enter\", // enter | result\n      seq1: \"\",\n      seq2: \"\",\n    }\n  }\n\n  change = (e) => {\n    const {name, value} = e.target;\n    this.setState({[name]:value})\n  };\n\n  changeStatus = () => {\n    this.setState({status: \"result\"});\n  };\n\n  reset = () => {\n      this.setState({\n          status: \"enter\", //invite | enter | result\n          seq1: \"\",\n          seq2: \"\",\n      })\n  };\n\n  render() {\n    return (\n        <div className=\"alignment-app\" data-testid=\"app\">\n            <InputBlock\n               status={this.state.status}\n               seq1={this.state.seq1}\n               seq2={this.state.seq2}\n               change={this.change}\n               changeStatus={this.changeStatus}\n           />\n           <ResultBlock\n               status={this.state.status}\n               seq1={this.state.seq1}\n               seq2={this.state.seq2}\n               reset={this.reset}\n           />\n        </div>\n    )\n  }\n}\n\nexport default AlignmentApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AlignmentApp from './Alignment-app';\n\nReactDOM.render(\n  <React.StrictMode>\n      <AlignmentApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}